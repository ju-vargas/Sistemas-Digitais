

================================================================
== Vitis HLS Report for 'matrixmul_Pipeline_Row_a00_sum00'
================================================================
* Date:           Wed Feb 14 00:39:51 2024

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        hls_matriz
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35t-csg325-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.951 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18|  0.180 us|  0.180 us|   18|   18|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                 |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row_a00_sum00  |       16|       16|         2|          1|          1|    16|       yes|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.95>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 5 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%j_a = alloca i32 1"   --->   Operation 6 'alloca' 'j_a' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i_a = alloca i32 1"   --->   Operation 7 'alloca' 'i_a' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %a, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.61ns)   --->   "%store_ln0 = store i5 0, i5 %indvar_flatten"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 11 [1/1] (1.61ns)   --->   "%store_ln0 = store i3 0, i3 %i_a"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 12 [1/1] (1.61ns)   --->   "%store_ln0 = store i3 0, i3 %j_a"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 13 [1/1] (1.61ns)   --->   "%store_ln0 = store i8 0, i8 %empty"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 14 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i5 %indvar_flatten" [matrixmul.cpp:57]   --->   Operation 15 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 16 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.86ns)   --->   "%icmp_ln57 = icmp_eq  i5 %indvar_flatten_load, i5 16" [matrixmul.cpp:57]   --->   Operation 17 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 1.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (1.86ns)   --->   "%add_ln57_1 = add i5 %indvar_flatten_load, i5 1" [matrixmul.cpp:57]   --->   Operation 18 'add' 'add_ln57_1' <Predicate = true> <Delay = 1.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln57 = br i1 %icmp_ln57, void %for.inc11, void %for.inc35.preheader.exitStub" [matrixmul.cpp:57]   --->   Operation 19 'br' 'br_ln57' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%j_a_load = load i3 %j_a" [matrixmul.cpp:58]   --->   Operation 20 'load' 'j_a_load' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i_a_load = load i3 %i_a" [matrixmul.cpp:57]   --->   Operation 21 'load' 'i_a_load' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.68ns)   --->   "%add_ln57 = add i3 %i_a_load, i3 1" [matrixmul.cpp:57]   --->   Operation 22 'add' 'add_ln57' <Predicate = (!icmp_ln57)> <Delay = 1.68> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (1.68ns)   --->   "%icmp_ln58 = icmp_eq  i3 %j_a_load, i3 4" [matrixmul.cpp:58]   --->   Operation 23 'icmp' 'icmp_ln58' <Predicate = (!icmp_ln57)> <Delay = 1.68> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.98ns)   --->   "%select_ln59 = select i1 %icmp_ln58, i3 0, i3 %j_a_load" [matrixmul.cpp:59]   --->   Operation 24 'select' 'select_ln59' <Predicate = (!icmp_ln57)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.98ns)   --->   "%select_ln59_1 = select i1 %icmp_ln58, i3 %add_ln57, i3 %i_a_load" [matrixmul.cpp:59]   --->   Operation 25 'select' 'select_ln59_1' <Predicate = (!icmp_ln57)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i3.i3, i3 %select_ln59_1, i3 %select_ln59" [matrixmul.cpp:59]   --->   Operation 26 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i6 %tmp" [matrixmul.cpp:59]   --->   Operation 27 'zext' 'zext_ln59' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%a_addr = getelementptr i8 %a, i64 0, i64 %zext_ln59" [matrixmul.cpp:59]   --->   Operation 28 'getelementptr' 'a_addr' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (2.15ns)   --->   "%a_load = load i6 %a_addr" [matrixmul.cpp:59]   --->   Operation 29 'load' 'a_load' <Predicate = (!icmp_ln57)> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 30 [1/1] (1.68ns)   --->   "%add_ln58 = add i3 %select_ln59, i3 1" [matrixmul.cpp:58]   --->   Operation 30 'add' 'add_ln58' <Predicate = (!icmp_ln57)> <Delay = 1.68> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.61ns)   --->   "%store_ln58 = store i5 %add_ln57_1, i5 %indvar_flatten" [matrixmul.cpp:58]   --->   Operation 31 'store' 'store_ln58' <Predicate = (!icmp_ln57)> <Delay = 1.61>
ST_1 : Operation 32 [1/1] (1.61ns)   --->   "%store_ln58 = store i3 %select_ln59_1, i3 %i_a" [matrixmul.cpp:58]   --->   Operation 32 'store' 'store_ln58' <Predicate = (!icmp_ln57)> <Delay = 1.61>
ST_1 : Operation 33 [1/1] (1.61ns)   --->   "%store_ln58 = store i3 %add_ln58, i3 %j_a" [matrixmul.cpp:58]   --->   Operation 33 'store' 'store_ln58' <Predicate = (!icmp_ln57)> <Delay = 1.61>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%p_load1 = load i8 %empty"   --->   Operation 43 'load' 'p_load1' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %p_out, i8 %p_load1"   --->   Operation 44 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 45 'ret' 'ret_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.87>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%p_load = load i8 %empty" [matrixmul.cpp:59]   --->   Operation 34 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Row_a00_sum00_str"   --->   Operation 35 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 36 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 37 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%specloopname_ln58 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [matrixmul.cpp:58]   --->   Operation 38 'specloopname' 'specloopname_ln58' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/2] (2.15ns)   --->   "%a_load = load i6 %a_addr" [matrixmul.cpp:59]   --->   Operation 39 'load' 'a_load' <Predicate = true> <Delay = 2.15> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 40 [1/1] (2.11ns)   --->   "%add_ln59 = add i8 %a_load, i8 %p_load" [matrixmul.cpp:59]   --->   Operation 40 'add' 'add_ln59' <Predicate = true> <Delay = 2.11> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.11> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.61ns)   --->   "%store_ln58 = store i8 %add_ln59, i8 %empty" [matrixmul.cpp:58]   --->   Operation 41 'store' 'store_ln58' <Predicate = true> <Delay = 1.61>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln58 = br void %for.inc" [matrixmul.cpp:58]   --->   Operation 42 'br' 'br_ln58' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.951ns
The critical path consists of the following:
	'alloca' operation ('j_a') [4]  (0.000 ns)
	'load' operation ('j_a_load', matrixmul.cpp:58) on local variable 'j_a' [21]  (0.000 ns)
	'icmp' operation ('icmp_ln58', matrixmul.cpp:58) [26]  (1.680 ns)
	'select' operation ('select_ln59', matrixmul.cpp:59) [27]  (0.980 ns)
	'add' operation ('add_ln58', matrixmul.cpp:58) [36]  (1.680 ns)
	'store' operation ('store_ln58', matrixmul.cpp:58) of variable 'add_ln58', matrixmul.cpp:58 on local variable 'j_a' [39]  (1.610 ns)

 <State 2>: 5.877ns
The critical path consists of the following:
	'load' operation ('a_load', matrixmul.cpp:59) on array 'a' [34]  (2.152 ns)
	'add' operation ('add_ln59', matrixmul.cpp:59) [35]  (2.115 ns)
	'store' operation ('store_ln58', matrixmul.cpp:58) of variable 'add_ln59', matrixmul.cpp:59 on local variable 'empty' [40]  (1.610 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
