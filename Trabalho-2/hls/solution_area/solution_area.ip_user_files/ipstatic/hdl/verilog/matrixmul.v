// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul_matrixmul,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-csg325-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.900500,HLS_SYN_LAT=88,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=137,HLS_SYN_LUT=1040,HLS_VERSION=2023_1}" *)

module matrixmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_q0,
        b_address0,
        b_ce0,
        b_q0,
        r_address0,
        r_ce0,
        r_we0,
        r_d0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] a_address0;
output   a_ce0;
input  [7:0] a_q0;
output  [1:0] b_address0;
output   b_ce0;
input  [7:0] b_q0;
output  [1:0] r_address0;
output   r_ce0;
output   r_we0;
output  [7:0] r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] a_address0;
reg a_ce0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start;
wire    grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_done;
wire    grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_idle;
wire    grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_ready;
wire   [5:0] grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_a_address0;
wire    grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_a_ce0;
wire   [7:0] grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_p_out;
wire    grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_p_out_ap_vld;
wire    grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start;
wire    grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_done;
wire    grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_idle;
wire    grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_ready;
wire   [5:0] grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_a_address0;
wire    grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_a_ce0;
wire   [7:0] grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_p_out;
wire    grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_p_out_ap_vld;
wire    grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start;
wire    grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_done;
wire    grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_idle;
wire    grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_ready;
wire   [5:0] grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_a_address0;
wire    grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_a_ce0;
wire   [7:0] grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_p_out;
wire    grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_p_out_ap_vld;
wire    grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start;
wire    grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_done;
wire    grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_idle;
wire    grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_ready;
wire   [5:0] grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_a_address0;
wire    grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_a_ce0;
wire   [7:0] grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_p_out;
wire    grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_p_out_ap_vld;
wire    grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start;
wire    grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_done;
wire    grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_idle;
wire    grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_ready;
wire   [1:0] grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_b_address0;
wire    grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_b_ce0;
wire   [1:0] grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_address0;
wire    grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_ce0;
wire    grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_we0;
wire   [7:0] grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_d0;
reg    grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start_reg = 1'b0;
#0 grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start_reg = 1'b0;
#0 grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start_reg = 1'b0;
#0 grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start_reg = 1'b0;
#0 grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start_reg = 1'b0;
end

matrixmul_matrixmul_Pipeline_Row_a00_sum00 grp_matrixmul_Pipeline_Row_a00_sum00_fu_50(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start),
    .ap_done(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_done),
    .ap_idle(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_idle),
    .ap_ready(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_ready),
    .a_address0(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_a_address0),
    .a_ce0(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_a_ce0),
    .a_q0(a_q0),
    .p_out(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_p_out),
    .p_out_ap_vld(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_p_out_ap_vld)
);

matrixmul_matrixmul_Pipeline_Row_a01_sum01 grp_matrixmul_Pipeline_Row_a01_sum01_fu_57(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start),
    .ap_done(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_done),
    .ap_idle(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_idle),
    .ap_ready(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_ready),
    .a_address0(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_a_address0),
    .a_ce0(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_a_ce0),
    .a_q0(a_q0),
    .p_out(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_p_out),
    .p_out_ap_vld(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_p_out_ap_vld)
);

matrixmul_matrixmul_Pipeline_Row_a10_sum10 grp_matrixmul_Pipeline_Row_a10_sum10_fu_64(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start),
    .ap_done(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_done),
    .ap_idle(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_idle),
    .ap_ready(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_ready),
    .a_address0(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_a_address0),
    .a_ce0(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_a_ce0),
    .a_q0(a_q0),
    .p_out(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_p_out),
    .p_out_ap_vld(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_p_out_ap_vld)
);

matrixmul_matrixmul_Pipeline_Row_a11_sum11 grp_matrixmul_Pipeline_Row_a11_sum11_fu_71(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start),
    .ap_done(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_done),
    .ap_idle(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_idle),
    .ap_ready(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_ready),
    .a_address0(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_a_address0),
    .a_ce0(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_a_ce0),
    .a_q0(a_q0),
    .p_out(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_p_out),
    .p_out_ap_vld(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_p_out_ap_vld)
);

matrixmul_matrixmul_Pipeline_Row_r_Col_r grp_matrixmul_Pipeline_Row_r_Col_r_fu_78(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start),
    .ap_done(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_done),
    .ap_idle(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_idle),
    .ap_ready(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_ready),
    .b_address0(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_b_address0),
    .b_ce0(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_b_ce0),
    .b_q0(b_q0),
    .r_address0(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_address0),
    .r_ce0(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_ce0),
    .r_we0(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_we0),
    .r_d0(grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_d0),
    .p_reload25(grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_p_out),
    .p_reload22(grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_p_out),
    .p_reload19(grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_p_out),
    .p_reload(grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_p_out)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start_reg <= 1'b1;
        end else if ((grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_ready == 1'b1)) begin
            grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start_reg <= 1'b1;
        end else if ((grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_ready == 1'b1)) begin
            grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start_reg <= 1'b1;
        end else if ((grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_ready == 1'b1)) begin
            grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start_reg <= 1'b1;
        end else if ((grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_ready == 1'b1)) begin
            grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start_reg <= 1'b1;
        end else if ((grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_ready == 1'b1)) begin
            grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        a_address0 = grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address0 = grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_address0 = grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_a_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        a_address0 = grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_a_address0;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        a_ce0 = grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_ce0 = grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_ce0 = grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_a_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        a_ce0 = grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_a_ce0;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign b_address0 = grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_b_address0;

assign b_ce0 = grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_b_ce0;

assign grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start = grp_matrixmul_Pipeline_Row_a00_sum00_fu_50_ap_start_reg;

assign grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start = grp_matrixmul_Pipeline_Row_a01_sum01_fu_57_ap_start_reg;

assign grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start = grp_matrixmul_Pipeline_Row_a10_sum10_fu_64_ap_start_reg;

assign grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start = grp_matrixmul_Pipeline_Row_a11_sum11_fu_71_ap_start_reg;

assign grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start = grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_ap_start_reg;

assign r_address0 = grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_address0;

assign r_ce0 = grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_ce0;

assign r_d0 = grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_d0;

assign r_we0 = grp_matrixmul_Pipeline_Row_r_Col_r_fu_78_r_we0;

endmodule //matrixmul
